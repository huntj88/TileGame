name: Bump Version and Create Release

on:
  workflow_dispatch:
    inputs:
      part:
        description: 'Part of version to bump. Options: major, minor, patch'
        required: true

jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - run: ./.github/workflows/validateReleaseInput.sh ${{ github.event.inputs.part }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build and Test
        run: ./gradlew test

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          RELEASE_BRANCHES: master
          DEFAULT_BUMP: ${{ github.event.inputs.part }}

  build_release_aab:
    needs: bump_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Release Bundle
        run: ./gradlew bundleRelease

      - name: Sign Release Bundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - run: |
          mkdir release
          cp ${{ env.SIGNED_RELEASE_FILE }} release
          cp app/build/outputs/mapping/release/mapping.txt release

      - uses: actions/upload-artifact@v2
        with:
          name: release-bundle
          path: release

  build_release_apk:
    needs: bump_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Release APK
        run: ./gradlew assembleRelease

      - name: Sign Release APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - run: |
          mkdir release
          mv ${{ env.SIGNED_RELEASE_FILE }} release/app-release-signed.apk
          cp app/build/outputs/mapping/release/mapping.txt release

      - uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: release

  create_github_release:
    needs: [build_release_aab, build_release_apk]
    runs-on: ubuntu-latest
    steps:
      - run: mkdir githubOutput

      - uses: actions/download-artifact@v2
        with:
          name: release-apk
          path: githubOutput

      - uses: actions/download-artifact@v2
        with:
          name: release-bundle
          path: githubOutput

      - name: Upload to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          file: githubOutput/*
          tag: ${{ github.ref }}
          file_glob: true

  upload_to_google_play:
    needs: build_release_aab
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: release-bundle

      - name: Create service_account.json FROM secrets.SERVICE_ACCOUNT_JSON
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Upload To Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: me.jameshunt.tilegame
          releaseFile: app-release.aab
          track: internal
          mappingFile: mapping.txt